--- a/gtk/controller/controller-0.6.c	2011-05-20 13:17:58.163125353 +0200
+++ a/gtk/controller/controller.c	2011-05-20 13:17:35.111706219 +0200
@@ -1,4 +1,4 @@
-/* controller.c generated by valac 0.11.7, the Vala compiler
+/* controller.c generated by valac 0.12.0, the Vala compiler
  * generated from controller.vala, do not modify */
 
 /* Copyright (C) 2011 Red Hat, Inc.*/
@@ -169,14 +169,13 @@
 	GError* _tmp2_;
 	GSocketListener* _tmp3_;
 	GSocketListener* listener;
-	gint _tmp4_;
+	GUnixSocketAddress* _tmp4_;
 	GUnixSocketAddress* _tmp5_;
-	GUnixSocketAddress* _tmp6_;
-	gboolean _tmp7_;
+	gboolean _tmp6_;
+	GSocketConnection* _tmp7_;
 	GSocketConnection* _tmp8_;
-	GSocketConnection* _tmp9_;
 	GSocketConnection* c;
-	GSocketConnection* _tmp10_;
+	GSocketConnection* _tmp9_;
 	GError * e;
 	GError * _inner_error_;
 };
@@ -950,12 +949,11 @@
 	data->_tmp3_ = NULL;
 	data->_tmp3_ = g_socket_listener_new ();
 	data->listener = data->_tmp3_;
-	data->_tmp4_ = strlen (data->addr);
-	data->_tmp5_ = NULL;
-	data->_tmp5_ = (GUnixSocketAddress*) g_unix_socket_address_new_with_type (data->addr, data->_tmp4_, G_UNIX_SOCKET_ADDRESS_PATH);
-	data->_tmp6_ = data->_tmp5_;
-	g_socket_listener_add_address (data->listener, (GSocketAddress*) data->_tmp6_, G_SOCKET_TYPE_STREAM, G_SOCKET_PROTOCOL_DEFAULT, NULL, NULL, &data->_inner_error_);
-	_g_object_unref0 (data->_tmp6_);
+	data->_tmp4_ = NULL;
+	data->_tmp4_ = (GUnixSocketAddress*) g_unix_socket_address_new (data->addr);
+	data->_tmp5_ = data->_tmp4_;
+	g_socket_listener_add_address (data->listener, (GSocketAddress*) data->_tmp5_, G_SOCKET_TYPE_STREAM, G_SOCKET_PROTOCOL_DEFAULT, NULL, NULL, &data->_inner_error_);
+	_g_object_unref0 (data->_tmp5_);
 	if (data->_inner_error_ != NULL) {
 		g_simple_async_result_set_from_error (data->_async_result, data->_inner_error_);
 		g_error_free (data->_inner_error_);
@@ -969,19 +967,19 @@
 		return FALSE;
 	}
 	{
-		data->_tmp7_ = TRUE;
+		data->_tmp6_ = TRUE;
 		while (TRUE) {
-			if (!data->_tmp7_) {
+			if (!data->_tmp6_) {
 			}
-			data->_tmp7_ = FALSE;
+			data->_tmp6_ = FALSE;
 			data->_state_ = 1;
 			g_socket_listener_accept_async (data->listener, NULL, spice_controller_listen_ready, data);
 			return FALSE;
 			_state_1:
-			data->_tmp8_ = NULL;
-			data->_tmp8_ = g_socket_listener_accept_finish (data->listener, data->_res_, NULL, &data->_inner_error_);
-			data->_tmp9_ = _g_object_ref0 (data->_tmp8_);
-			data->c = data->_tmp9_;
+			data->_tmp7_ = NULL;
+			data->_tmp7_ = g_socket_listener_accept_finish (data->listener, data->_res_, NULL, &data->_inner_error_);
+			data->_tmp8_ = _g_object_ref0 (data->_tmp7_);
+			data->c = data->_tmp8_;
 			if (data->_inner_error_ != NULL) {
 				g_simple_async_result_set_from_error (data->_async_result, data->_inner_error_);
 				g_error_free (data->_inner_error_);
@@ -995,8 +993,8 @@
 				return FALSE;
 			}
 			data->self->priv->nclients = data->self->priv->nclients + 1;
-			data->_tmp10_ = _g_object_ref0 (data->c);
-			data->self->priv->clients = g_list_append (data->self->priv->clients, data->_tmp10_);
+			data->_tmp9_ = _g_object_ref0 (data->c);
+			data->self->priv->clients = g_list_append (data->self->priv->clients, data->_tmp9_);
 			data->_state_ = 2;
 			spice_controller_handle_client (data->self, data->c, spice_controller_listen_ready, data);
 			return FALSE;
